-- Code sample from Defold side scroller tutorial

global_active_dialog = 0

local smiley_scale_small = 0.6
local smiley_scale_big = 0.8
local smileys_success = {}
local smileys_failure = {}

function init(self)
	self.score = 0
	
	self.node_gui_ingame = gui.get_node("gui_ingame")
	
	self.score_node = gui.get_node("txt_score")
	self.time_node = gui.get_node("txt_time")
	self.smiley_node_0 = gui.get_node("box0")
	self.smiley_node_1 = gui.get_node("box1")
	self.smiley_node_2 = gui.get_node("box2")
	
	self.node_dialog_success = gui.get_node("dialog_level_complete")
	self.node_dialog_gameover = gui.get_node("dialog_gameover")

	self.node_gameover_score = gui.get_node("txt_gameover_score")
	
	_hide_all_dialogs(self)
end

local function scale_down(self, node)
	local s = 1.0
	gui.animate(node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_OUT, 0.05)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_score") then
		local s = 1.2
		gui.set_text(self.score_node, tostring(message.amount))
		gui.animate(self.score_node, gui.PROP_SCALE, vmath.vector4(s, s, s, 0), gui.EASING_OUT, 0.1, 0.0, scale_down)
	
	elseif message_id == hash("set_time") then
		gui.set_text(self.time_node, tostring(math.ceil(message.time)))
	
	elseif message_id == hash("set_smileys") then
		gui.set_texture(self.smiley_node_0, "smileys")
		gui.play_flipbook(self.smiley_node_0,"emoji_u1f" ..  message.smiley0)
		gui.set_scale(self.smiley_node_0, vmath.vector4(smiley_scale_big, smiley_scale_big, 0, 0))

		gui.set_texture(self.smiley_node_1, "smileys")
		gui.play_flipbook(self.smiley_node_1, "emoji_u1f" .. message.smiley1)

		gui.set_texture(self.smiley_node_2, "smileys")
		gui.play_flipbook(self.smiley_node_2, "emoji_u1f" .. message.smiley2)
		
	elseif message_id == hash("activate_smiley") then
		-- reset all smiley sizes
		gui.set_scale(self.smiley_node_0, vmath.vector4(smiley_scale_small, smiley_scale_small, 0, 0))
		gui.set_scale(self.smiley_node_1, vmath.vector4(smiley_scale_small, smiley_scale_small, 0, 0))
		gui.set_scale(self.smiley_node_2, vmath.vector4(smiley_scale_small, smiley_scale_small, 0, 0))
		-- set to background layer
		gui.set_layer(self.smiley_node_0, "gui_bottom_layer")
		gui.set_layer(self.smiley_node_1, "gui_bottom_layer")
		gui.set_layer(self.smiley_node_2, "gui_bottom_layer")
		
		if message.nr >= 0 then
			-- smiley scale of according smiley
			local smiley = self.smiley_node_0
			if message.nr == 0 then
				smiley = self.smiley_node_0
			elseif message.nr == 1 then
				smiley = self.smiley_node_1
			elseif message.nr == 2 then
				smiley = self.smiley_node_2
			end
			-- scale up
			gui.set_scale(smiley, vmath.vector4(smiley_scale_big, smiley_scale_big, 0, 0))
			-- set to foreground layer
			gui.set_layer(smiley, "gui_top_layer")
		end

	elseif message_id == hash("show_ingame_gui") then
		gui.set_enabled(self.node_gui_ingame, message.show)
	
	elseif message_id == hash("show_dialog_level_complete") then
		gui.set_enabled(self.node_dialog_success, message.show)
		if message.show == true then 
			global_active_dialog = 1 
		end
		
	elseif message_id == hash("show_dialog_gameover") then
		gui.set_enabled(self.node_dialog_gameover, message.show)
		if message.show == true then 
			global_active_dialog = 2 
			gui.set_text(self.node_gameover_score, tostring(global_score))
		end
		
	elseif message_id == hash("hide_all_dialogs") then
		_hide_all_dialogs(self)
	end
end

function _hide_all_dialogs(self)
	gui.set_enabled(self.node_dialog_gameover, false)
	gui.set_enabled(self.node_dialog_success, false)
	global_active_dialog = 0
end